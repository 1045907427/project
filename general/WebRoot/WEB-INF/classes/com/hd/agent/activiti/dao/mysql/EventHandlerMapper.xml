<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hd.agent.activiti.dao.EventHandlerMapper" >
  <resultMap id="BaseResultMap" type="com.hd.agent.activiti.model.EventHandler" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="definitionkey" property="definitionkey" jdbcType="VARCHAR" />
    <result column="definitionid" property="definitionid" jdbcType="VARCHAR" />
    <result column="taskkey" property="taskkey" jdbcType="VARCHAR" />
    <result column="event" property="event" jdbcType="VARCHAR" />
    <result column="handler" property="handler" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="adduserid" property="adduserid" jdbcType="VARCHAR" />
    <result column="addtime" property="addtime" jdbcType="TIMESTAMP" />
    <result column="modifyuserid" property="modifyuserid" jdbcType="VARCHAR" />
    <result column="modifytime" property="modifytime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, definitionkey, taskkey, event, handler, description, adduserid, addtime, modifyuserid, modifytime, definitionid
  </sql>
  <select id="selectEventHandlerByTask" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_act_handler
  	<trim prefix="where" prefixOverrides="and">
  		<if test="definitionkey != null">
  			and definitionkey = #{definitionkey }
  		</if>
        <if test="definitionid != null">
            and definitionid = #{definitionid }
        </if>
  		<if test="taskkey != null">
  			and taskkey = #{taskkey }
  		</if>
  		<if test="event != null">
  			and event = #{event }
  		</if>
  	</trim> 
  </select>
  <insert id="insertEventHandler" parameterType="com.hd.agent.activiti.model.EventHandler" >
    insert into t_act_handler
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="definitionkey != null" >
        definitionkey,
      </if>
      <if test="definitionid != null" >
          definitionid,
      </if>
      <if test="taskkey != null" >
        taskkey,
      </if>
      <if test="event != null" >
        event,
      </if>
      <if test="handler != null" >
        handler,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="adduserid != null" >
        adduserid,
      </if>
      addtime,
      <if test="modifyuserid != null" >
        modifyuserid,
      </if>
      <if test="modifytime != null" >
        modifytime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id},
      </if>
      <if test="definitionkey != null" >
        #{definitionkey},
      </if>
      <if test="definitionid != null" >
        #{definitionid},
      </if>
      <if test="taskkey != null" >
        #{taskkey},
      </if>
      <if test="event != null" >
        #{event},
      </if>
      <if test="handler != null" >
        #{handler},
      </if>
      <if test="description != null" >
        #{description},
      </if>
      <if test="adduserid != null" >
        #{adduserid},
      </if>
      now(),
      <if test="modifyuserid != null" >
        #{modifyuserid},
      </if>
      <if test="modifytime != null" >
        #{modifytime},
      </if>
    </trim>
  </insert>
  <delete id="deleteEventHandlerByTask" parameterType="java.lang.String">
  	delete from t_act_handler
  	<trim prefix="where" prefixOverrides="and">
        <if test="definitionkey != null">
            and definitionkey = #{definitionkey }
        </if>
        <if test="definitionid != null">
            and definitionid = #{definitionid }
        </if>
  		<if test="taskkey != null">
  			and taskkey = #{taskkey }
  		</if>
  		<if test="event != null">
  			and event = #{event }
  		</if>
  	</trim>
  </delete>
  <insert id="doCloneOldVerson2NewVersion" parameterType="java.util.Map">
      delete from t_act_handler where definitionid = #{newdefinitionid };

      insert into t_act_handler (definitionkey, taskkey, event, handler, description, adduserid, addtime, definitionid)
      (select definitionkey, taskkey, event, handler, description, adduserid, addtime, #{newdefinitionid } from t_act_handler where definitionid = #{olddefinitionid});

      update t_act_handler
      set
      adduserid = #{adduserid },
      addtime = now()
      where definitionid = #{newdefinitionid }
  </insert>

  <select id="selectExecutedHandlers" parameterType="java.lang.String" resultType="com.hd.agent.activiti.model.EventHandler">
    select <include refid="Base_Column_List"/>
    from t_act_handler
    where definitionid = #{definitionid }
      and event = 'complete'
      <choose>
        <when test="taskkeys != null">
          and taskkey in
          <foreach collection="taskkeys" open="(" close=")" item="taskkey" separator="," index="idx">
            #{taskkey }
          </foreach>
        </when>
        <otherwise>
          and 1=2
        </otherwise>
      </choose>
  </select>
  <select id="selectOppositeHandlerByCompleteHandler" parameterType="java.lang.String" resultType="java.util.Map">
    select createhandler handler, createclass clazz
      from t_act_handler_relation
      <trim prefix="where" prefixOverrides="and|or">
        <choose>
          <when test="handlers != null">
            completehandler in
            <foreach collection="handlers" open="(" close=")" item="handler" separator="," index="idx">
              #{handler }
            </foreach>
          </when>
          <otherwise>
            1=2
          </otherwise>
        </choose>
      </trim>
      group by createhandler, createclass
  </select>

  <insert id="insertHandlerLog" parameterType="com.hd.agent.activiti.model.HandlerLog">
    insert into t_act_handler_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="definitionkey != null">
        definitionkey,
      </if>
      <if test="definitionid != null">
        definitionid,
      </if>
      <if test="processid != null">
        processid,
      </if>
      <if test="taskkey != null">
        taskkey,
      </if>
      <if test="taskname != null">
        taskname,
      </if>
      <if test="event != null">
        event,
      </if>
      <if test="handler != null">
        handler,
      </if>
      <if test="clazz != null">
        clazz,
      </if>
      <if test="handlerdescription != null">
        handlerdescription,
      </if>
      <if test="loguserid != null">
        loguserid,
      </if>
      <if test="logusername != null">
        logusername,
      </if>
      logtime,
      <if test="param1clazz != null">
        param1clazz,
      </if>
      <if test="param2clazz != null">
        param2clazz,
      </if>
      <if test="param3clazz != null">
        param3clazz,
      </if>
      <if test="param4clazz != null">
        param4clazz,
      </if>
      <if test="param5clazz != null">
        param5clazz,
      </if>
      <if test="returnobjclazz != null">
        returnobjclazz,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="param1 != null">
        param1,
      </if>
      <if test="param2 != null">
        param2,
      </if>
      <if test="param3 != null">
        param3,
      </if>
      <if test="param4 != null">
        param4,
      </if>
      <if test="param5 != null">
        param5,
      </if>
      <if test="returnobj != null">
        returnobj,
      </if>
      <if test="taskid != null">
        taskid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="definitionkey != null">
        #{definitionkey},
      </if>
      <if test="definitionid != null">
        #{definitionid},
      </if>
      <if test="processid != null">
        #{processid},
      </if>
      <if test="taskkey != null">
        #{taskkey},
      </if>
      <if test="taskname != null">
        #{taskname},
      </if>
      <if test="event != null">
        #{event},
      </if>
      <if test="handler != null">
        (select DISTINCT handler from t_act_handler_info where clazz = #{handler} ),
      </if>
      <if test="clazz != null">
        #{clazz},
      </if>
      <if test="handlerdescription != null">
        (select DISTINCT handlerdescription from t_act_handler_info where clazz = #{handlerdescription} ),
      </if>
      <if test="loguserid != null">
        #{loguserid},
      </if>
      <if test="logusername != null">
        #{logusername},
      </if>
      now(),
      <if test="param1clazz != null">
        #{param1clazz},
      </if>
      <if test="param2clazz != null">
        #{param2clazz},
      </if>
      <if test="param3clazz != null">
        #{param3clazz},
      </if>
      <if test="param4clazz != null">
        #{param4clazz},
      </if>
      <if test="param5clazz != null">
        #{param5clazz},
      </if>
      <if test="returnobjclazz != null">
        #{returnobjclazz},
      </if>
      <if test="remark != null">
        #{remark},
      </if>
      <if test="param1 != null">
        #{param1},
      </if>
      <if test="param2 != null">
        #{param2},
      </if>
      <if test="param3 != null">
        #{param3},
      </if>
      <if test="param4 != null">
        #{param4},
      </if>
      <if test="param5 != null">
        #{param5},
      </if>
      <if test="returnobj != null">
        #{returnobj},
      </if>
      <if test="taskid != null">
        #{taskid},
      </if>
    </trim>
  </insert>
  <sql id="HandlerLog_Column_List">
    id, definitionkey, definitionid, processid, taskkey, taskname, event, handler, clazz,
    handlerdescription, loguserid, logusername, logtime, param1clazz, param2clazz, param3clazz,
    param4clazz, param5clazz, returnobjclazz, remark, param1, param2, param3, param4, param5, returnobj
  </sql>
  <sql id="HandlerLog_Column_List2">
    t1.id, t1.definitionkey, t1.definitionid, t1.processid, t1.taskkey, t1.taskname, t1.event, t1.handler, t1.clazz,
    t1.handlerdescription, t1.loguserid, t1.logusername, t1.logtime, t1.param1clazz, t1.param2clazz, t1.param3clazz,
    t1.param4clazz, t1.param5clazz, t1.returnobjclazz, t1.remark, t1.param1, t1.param2, t1.param3, t1.param4, t1.param5, t1.returnobj
  </sql>
  <select id="selectHanderItemsByUrl" parameterType="java.lang.String" resultType="java.util.Map">
    select handler, handlerdescription
    from t_act_handler_info
    <trim prefix="where" prefixOverrides="and|or">
      <if test="url != null">
        and url = #{url }
      </if>
      <if test="handlertype != null">
        and handlertype = #{handlertype }
      </if>
    </trim>
    order by id
  </select>
  <select id="selectHandlerLogById" parameterType="java.lang.String" resultType="com.hd.agent.activiti.model.HandlerLog">
    select <include refid="HandlerLog_Column_List"/>
    from t_act_handler_log where id = #{id }
  </select>
  <select id="selectListenerClazzes" parameterType="java.lang.String" resultType="java.util.Map">
    SELECT DISTINCT * FROM (
      SELECT handler,clazz,handlerdescription FROM t_act_handler_info where handlertype <![CDATA[<>]]> '4'
    ) t order by handler
  </select>
  <select id="selectHandlerLogList" parameterType="com.hd.agent.common.util.PageMap" resultType="com.hd.agent.activiti.model.HandlerLog">
    select <include refid="HandlerLog_Column_List2"/>, t2.title processname
    from t_act_handler_log t1
    left join t_act_process t2 on t1.processid = t2.id
    <trim prefix="where" prefixOverrides="and|or">
      and 1=1
      <if test="condition.processid != null">
        and t1.processid = #{condition.processid }
      </if>
      <if test="condition.handler != null">
        and t1.handler = #{condition.handler }
      </if>
      <if test="condition.clazz != null">
        and t1.clazz = #{condition.clazz }
      </if>
      <include refid="common.Page_querySql"/>
      <include refid="common.Page_dataSql"/>
    </trim>
    order by t1.id desc
    <include refid="common.Page_limit"/>
  </select>
  <select id="selectHandlerLogListCount" parameterType="com.hd.agent.common.util.PageMap" resultType="int">
    select count(1)
    from t_act_handler_log
    <trim prefix="where" prefixOverrides="and|or">
      and 1=1
      <if test="condition.processid != null">
        and processid = #{condition.processid }
      </if>
      <if test="condition.handler != null">
        and handler = #{condition.handler }
      </if>
      <if test="condition.clazz != null">
        and clazz = #{condition.clazz }
      </if>
      <include refid="common.Page_querySql"/>
      <include refid="common.Page_dataSql"/>
    </trim>
  </select>
</mapper>